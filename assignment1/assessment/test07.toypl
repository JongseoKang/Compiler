namespace Mod

  func even(n)
  var a
  begin
    if n <= 0 then
      return 1
    else {
      a <- call odd(n-1);
      return 1 - a;
    }
  end

  func odd(n)
  var a
  begin
    if n <= 0 then
      return 0
    else {
      a <- call even(n-1);
      return 1 - a;
    }
  end

  func ack(m,n)
  var a, b
  begin
    if (m <= 0) then
      return n+1
    else if (n <= 0) then
      { a <- call ack(m-1,1); return a }
    else
      { a <- call ack(m, n-1); b <- call ack(m-1, a); return b };
  end

  func fact_rec(n)
  var a
  begin
    if (n <= 1) then return 1 else skip;
    a <- call fact_rec(n-1);
    return n*a;
  end
  
  func fact_loop(n)
  var a, i
  begin
    if (n <= 1) then return 1 else skip;
    a <- 1;
    i <- 1;
    while (i <= n) do {
      a <- i * a;
      i <- i + 1
    };
    return a
  end

end

func main()
var n, r1, r2, r3, r4, r5
begin
  n <- read;
  r1 <- call Mod.even(n);
  r2 <- call Mod.odd(n);
  r3 <- call Mod.ack(n,n);
  r4 <- call Mod.fact_rec(n);
  r5 <- call Mod.fact_loop(n);
  print(r1);
  print(r2);
  print(r3);
  print(r4);
  print(r5);
end
